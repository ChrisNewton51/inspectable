{"version":3,"names":["React","useContext","useEffect","useMemo","useState","getPromotedProductIOS","initConnection","promotedProductListener","purchaseErrorListener","purchaseUpdatedListener","IAPContext","createContext","useIAPContext","ctx","Error","withIAPContext","Component","WrapperComponent","props","connected","setConnected","products","setProducts","promotedProductsIOS","setPromotedProductsIOS","subscriptions","setSubscriptions","purchaseHistories","setPurchaseHistories","availablePurchases","setAvailablePurchases","currentPurchase","setCurrentPurchase","currentPurchaseError","setCurrentPurchaseError","initConnectionError","setInitConnectionError","context","then","value","undefined","catch","purchaseUpdateSubscription","purchase","purchaseErrorSubscription","error","promotedProductSubscription","product","prevProducts","remove"],"sources":["withIAPContext.tsx"],"sourcesContent":["import React, {useContext, useEffect, useMemo, useState} from 'react';\n\nimport {\n  getPromotedProductIOS,\n  initConnection,\n  promotedProductListener,\n  purchaseErrorListener,\n  purchaseUpdatedListener,\n} from '../iap';\nimport type {\n  InAppPurchase,\n  Product,\n  Purchase,\n  PurchaseError,\n  Subscription,\n  SubscriptionPurchase,\n} from '../types';\n\ntype IAPContextType = {\n  connected: boolean;\n  products: Product[];\n  promotedProductsIOS: Product[];\n  subscriptions: Subscription[];\n  purchaseHistories: Purchase[];\n  availablePurchases: Purchase[];\n  currentPurchase?: Purchase;\n  currentPurchaseError?: PurchaseError;\n  initConnectionError?: Error;\n  setProducts: (products: Product[]) => void;\n  setSubscriptions: (subscriptions: Subscription[]) => void;\n  setPurchaseHistories: (purchaseHistories: Purchase[]) => void;\n  setAvailablePurchases: (availablePurchases: Purchase[]) => void;\n  setCurrentPurchase: (currentPurchase: Purchase | undefined) => void;\n  setCurrentPurchaseError: (\n    currentPurchaseError: PurchaseError | undefined,\n  ) => void;\n};\n\n// @ts-ignore\nconst IAPContext = React.createContext<IAPContextType>(null);\n\nexport function useIAPContext(): IAPContextType {\n  const ctx = useContext(IAPContext);\n\n  if (!ctx) {\n    throw new Error('You need wrap your app with withIAPContext HOC');\n  }\n\n  return ctx;\n}\n\nexport function withIAPContext<T>(Component: React.ComponentType<T>) {\n  return function WrapperComponent(props: T) {\n    const [connected, setConnected] = useState(false);\n    const [products, setProducts] = useState<Product[]>([]);\n\n    const [promotedProductsIOS, setPromotedProductsIOS] = useState<Product[]>(\n      [],\n    );\n    const [subscriptions, setSubscriptions] = useState<Subscription[]>([]);\n    const [purchaseHistories, setPurchaseHistories] = useState<Purchase[]>([]);\n\n    const [availablePurchases, setAvailablePurchases] = useState<Purchase[]>(\n      [],\n    );\n    const [currentPurchase, setCurrentPurchase] = useState<Purchase>();\n\n    const [currentPurchaseError, setCurrentPurchaseError] =\n      useState<PurchaseError>();\n\n    const [initConnectionError, setInitConnectionError] = useState<Error>();\n\n    const context = useMemo(\n      () => ({\n        connected,\n        products,\n        subscriptions,\n        promotedProductsIOS,\n        purchaseHistories,\n        availablePurchases,\n        currentPurchase,\n        currentPurchaseError,\n        initConnectionError,\n        setProducts,\n        setSubscriptions,\n        setPurchaseHistories,\n        setAvailablePurchases,\n        setCurrentPurchase,\n        setCurrentPurchaseError,\n      }),\n      [\n        connected,\n        products,\n        subscriptions,\n        promotedProductsIOS,\n        purchaseHistories,\n        availablePurchases,\n        currentPurchase,\n        currentPurchaseError,\n        initConnectionError,\n        setProducts,\n        setSubscriptions,\n        setPurchaseHistories,\n        setAvailablePurchases,\n        setCurrentPurchase,\n        setCurrentPurchaseError,\n      ],\n    );\n\n    useEffect(() => {\n      initConnection()\n        .then((value) => {\n          setInitConnectionError(undefined);\n          setConnected(value);\n        })\n        .catch(setInitConnectionError);\n    }, []);\n\n    useEffect(() => {\n      if (!connected) {\n        return;\n      }\n\n      const purchaseUpdateSubscription = purchaseUpdatedListener(\n        async (purchase: InAppPurchase | SubscriptionPurchase) => {\n          setCurrentPurchaseError(undefined);\n          setCurrentPurchase(purchase);\n        },\n      );\n\n      const purchaseErrorSubscription = purchaseErrorListener(\n        (error: PurchaseError) => {\n          setCurrentPurchase(undefined);\n          setCurrentPurchaseError(error);\n        },\n      );\n\n      const promotedProductSubscription = promotedProductListener(async () => {\n        const product = await getPromotedProductIOS();\n\n        setPromotedProductsIOS((prevProducts) => [\n          ...prevProducts,\n          ...(product ? [product] : []),\n        ]);\n      });\n\n      return () => {\n        purchaseUpdateSubscription.remove();\n        purchaseErrorSubscription.remove();\n        promotedProductSubscription?.remove();\n      };\n    }, [connected]);\n\n    return (\n      <IAPContext.Provider value={context}>\n        <Component {...props} />\n      </IAPContext.Provider>\n    );\n  };\n}\n"],"mappings":"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"}