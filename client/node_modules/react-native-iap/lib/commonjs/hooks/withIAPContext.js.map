{"version":3,"names":["IAPContext","React","createContext","useIAPContext","ctx","useContext","Error","withIAPContext","Component","WrapperComponent","props","connected","setConnected","useState","products","setProducts","promotedProductsIOS","setPromotedProductsIOS","subscriptions","setSubscriptions","purchaseHistories","setPurchaseHistories","availablePurchases","setAvailablePurchases","currentPurchase","setCurrentPurchase","currentPurchaseError","setCurrentPurchaseError","initConnectionError","setInitConnectionError","context","useMemo","useEffect","initConnection","then","value","undefined","catch","purchaseUpdateSubscription","purchaseUpdatedListener","purchase","purchaseErrorSubscription","purchaseErrorListener","error","promotedProductSubscription","promotedProductListener","product","getPromotedProductIOS","prevProducts","remove"],"sources":["withIAPContext.tsx"],"sourcesContent":["import React, {useContext, useEffect, useMemo, useState} from 'react';\n\nimport {\n  getPromotedProductIOS,\n  initConnection,\n  promotedProductListener,\n  purchaseErrorListener,\n  purchaseUpdatedListener,\n} from '../iap';\nimport type {\n  InAppPurchase,\n  Product,\n  Purchase,\n  PurchaseError,\n  Subscription,\n  SubscriptionPurchase,\n} from '../types';\n\ntype IAPContextType = {\n  connected: boolean;\n  products: Product[];\n  promotedProductsIOS: Product[];\n  subscriptions: Subscription[];\n  purchaseHistories: Purchase[];\n  availablePurchases: Purchase[];\n  currentPurchase?: Purchase;\n  currentPurchaseError?: PurchaseError;\n  initConnectionError?: Error;\n  setProducts: (products: Product[]) => void;\n  setSubscriptions: (subscriptions: Subscription[]) => void;\n  setPurchaseHistories: (purchaseHistories: Purchase[]) => void;\n  setAvailablePurchases: (availablePurchases: Purchase[]) => void;\n  setCurrentPurchase: (currentPurchase: Purchase | undefined) => void;\n  setCurrentPurchaseError: (\n    currentPurchaseError: PurchaseError | undefined,\n  ) => void;\n};\n\n// @ts-ignore\nconst IAPContext = React.createContext<IAPContextType>(null);\n\nexport function useIAPContext(): IAPContextType {\n  const ctx = useContext(IAPContext);\n\n  if (!ctx) {\n    throw new Error('You need wrap your app with withIAPContext HOC');\n  }\n\n  return ctx;\n}\n\nexport function withIAPContext<T>(Component: React.ComponentType<T>) {\n  return function WrapperComponent(props: T) {\n    const [connected, setConnected] = useState(false);\n    const [products, setProducts] = useState<Product[]>([]);\n\n    const [promotedProductsIOS, setPromotedProductsIOS] = useState<Product[]>(\n      [],\n    );\n    const [subscriptions, setSubscriptions] = useState<Subscription[]>([]);\n    const [purchaseHistories, setPurchaseHistories] = useState<Purchase[]>([]);\n\n    const [availablePurchases, setAvailablePurchases] = useState<Purchase[]>(\n      [],\n    );\n    const [currentPurchase, setCurrentPurchase] = useState<Purchase>();\n\n    const [currentPurchaseError, setCurrentPurchaseError] =\n      useState<PurchaseError>();\n\n    const [initConnectionError, setInitConnectionError] = useState<Error>();\n\n    const context = useMemo(\n      () => ({\n        connected,\n        products,\n        subscriptions,\n        promotedProductsIOS,\n        purchaseHistories,\n        availablePurchases,\n        currentPurchase,\n        currentPurchaseError,\n        initConnectionError,\n        setProducts,\n        setSubscriptions,\n        setPurchaseHistories,\n        setAvailablePurchases,\n        setCurrentPurchase,\n        setCurrentPurchaseError,\n      }),\n      [\n        connected,\n        products,\n        subscriptions,\n        promotedProductsIOS,\n        purchaseHistories,\n        availablePurchases,\n        currentPurchase,\n        currentPurchaseError,\n        initConnectionError,\n        setProducts,\n        setSubscriptions,\n        setPurchaseHistories,\n        setAvailablePurchases,\n        setCurrentPurchase,\n        setCurrentPurchaseError,\n      ],\n    );\n\n    useEffect(() => {\n      initConnection()\n        .then((value) => {\n          setInitConnectionError(undefined);\n          setConnected(value);\n        })\n        .catch(setInitConnectionError);\n    }, []);\n\n    useEffect(() => {\n      if (!connected) {\n        return;\n      }\n\n      const purchaseUpdateSubscription = purchaseUpdatedListener(\n        async (purchase: InAppPurchase | SubscriptionPurchase) => {\n          setCurrentPurchaseError(undefined);\n          setCurrentPurchase(purchase);\n        },\n      );\n\n      const purchaseErrorSubscription = purchaseErrorListener(\n        (error: PurchaseError) => {\n          setCurrentPurchase(undefined);\n          setCurrentPurchaseError(error);\n        },\n      );\n\n      const promotedProductSubscription = promotedProductListener(async () => {\n        const product = await getPromotedProductIOS();\n\n        setPromotedProductsIOS((prevProducts) => [\n          ...prevProducts,\n          ...(product ? [product] : []),\n        ]);\n      });\n\n      return () => {\n        purchaseUpdateSubscription.remove();\n        purchaseErrorSubscription.remove();\n        promotedProductSubscription?.remove();\n      };\n    }, [connected]);\n\n    return (\n      <IAPContext.Provider value={context}>\n        <Component {...props} />\n      </IAPContext.Provider>\n    );\n  };\n}\n"],"mappings":"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"}